name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_ENV: test
  NEXT_PUBLIC_SUPABASE_URL: https://demo.supabase.co
  NEXT_PUBLIC_SUPABASE_ANON_KEY: demo-key
  SUPABASE_SERVICE_KEY: demo-service-key

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Debug environment
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Working directory: $(pwd)"
        echo "Environment variables:"
        echo "NODE_ENV: $NODE_ENV"
        echo "CI: $CI"
        free -h || echo "Memory info not available"
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm ci
        echo "Dependencies installed successfully"
    
    - name: Clean up any running processes
      run: |
        echo "Cleaning up running processes..."
        pkill -f "next" || true
        pkill -f "node" || true
        lsof -ti:3000 | xargs -r kill -9 || true
        lsof -ti:3001 | xargs -r kill -9 || true
        echo "Process cleanup completed"
    
    - name: Run linter
      run: |
        echo "Running ESLint..."
        npm run lint
        echo "Linting completed successfully"
    
    - name: Run type check
      run: |
        echo "Running TypeScript type check..."
        npm run type-check
        echo "Type check completed successfully"
    
    - name: Run tests
      run: |
        echo "Running Jest tests with coverage..."
        timeout 300 npm test -- --coverage --watchAll=false --forceExit --detectOpenHandles --silent
        echo "Tests completed successfully"
      env:
        CI: true
      continue-on-error: false
    
    - name: Build application
      run: |
        echo "Starting Next.js build..."
        echo "Build environment: NODE_ENV=$NODE_ENV"
        timeout 600 npm run build
        echo "Build process completed"
      env:
        NODE_ENV: production
      continue-on-error: false
    
    - name: Check build output
      run: |
        if [ -d ".next" ]; then
          echo "✅ Build completed successfully"
          ls -la .next/
        else
          echo "❌ Build failed - .next directory not found"
          exit 1
        fi
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  e2e:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: |
        echo "Installing Playwright browsers..."
        npx playwright install --with-deps
        echo "Playwright installation completed"
    
    - name: Clean up any running processes
      run: |
        echo "Cleaning up running processes for E2E tests..."
        pkill -f "next" || true
        pkill -f "node" || true
        lsof -ti:3000 | xargs -r kill -9 || true
        lsof -ti:3001 | xargs -r kill -9 || true
        echo "Process cleanup completed"
    
    - name: Run Playwright tests
      run: |
        echo "Starting Playwright E2E tests..."
        echo "Test environment: CI=$CI"
        echo "Base URL: $PLAYWRIGHT_BASE_URL"
        timeout 900 npm run test:e2e
        echo "E2E tests completed successfully"
      env:
        CI: true
        PLAYWRIGHT_BASE_URL: http://localhost:3000
      continue-on-error: false
    
    - name: Cleanup after E2E tests
      if: always()
      run: |
        pkill -f "next" || true
        pkill -f "node" || true
        lsof -ti:3000 | xargs -r kill -9 || true
        lsof -ti:3001 | xargs -r kill -9 || true
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30